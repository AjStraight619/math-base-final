datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id     String   @unique
  email  String   @unique
  Chat   Chat[]
  Note   Note[]
  Folder Folder[]
}

model Chat {
  id        String        @id @default(uuid())
  userId    String
  title     String
  messages  ChatMessage[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  user     User       @relation(fields: [userId], references: [id])
  tags     Tag[]      @relation("ChatTags")
  ChatTags ChatTags[]
  Tag      Tag?       @relation(fields: [tagId], references: [id])
  tagId    String?

  @@index([userId])
  @@index([tagId])
}

enum Role {
  function
  user
  data
  system
  assistant
  tool
}

model ChatMessage {
  id          String        @id @default(uuid())
  chatId      String
  content     String        @db.Text
  role        Role
  chat        Chat          @relation(fields: [chatId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  NoteContent NoteContent[]

  @@index([chatId])
}

model Note {
  id        String        @id @default(uuid())
  userId    String
  title     String
  contents  NoteContent[]
  tags      Tag[]         @relation("NoteTags")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  user     User       @relation(fields: [userId], references: [id])
  Folder   Folder?    @relation(fields: [folderId], references: [id])
  folderId String?
  NoteTags NoteTags[]

  @@index([folderId])
  @@index([userId])
}

model NoteContent {
  id            String   @id @default(uuid())
  noteId        String
  type          String?
  content       String?  @db.Text
  chatMessageId String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  note        Note         @relation(fields: [noteId], references: [id])
  chatMessage ChatMessage? @relation(fields: [chatMessageId], references: [id])

  @@index([noteId])
  @@index([chatMessageId])
}

model Folder {
  id        String   @id @default(uuid())
  userId    String
  title     String
  notes     Note[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Tag {
  id       String     @id @default(uuid())
  title    String     @unique
  notes    Note[]     @relation("NoteTags")
  chats    Chat[]     @relation("ChatTags")
  NoteTags NoteTags[]
  ChatTags ChatTags[]
  Chat     Chat[]
}

// Relations for tags
model NoteTags {
  noteId String
  tagId  String

  note Note @relation(fields: [noteId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@id([noteId, tagId])
  @@index([noteId])
  @@index([tagId])
}

model ChatTags {
  chatId String
  tagId  String

  chat Chat @relation(fields: [chatId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@id([chatId, tagId])
  @@index([tagId])
  @@index([chatId])
}
